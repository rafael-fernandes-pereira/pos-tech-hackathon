spring.application.name=PAYMENT-API
server.port=8080

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_SERVICE}
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

# URL de conexão com o banco de dados
spring.datasource.url=${SPRING_DATASOURCE_URL}

# Nome de usuário do banco de dados
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}

# Senha do banco de dados
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Driver JDBC para PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialeto do Hibernate para PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Mostrar SQL gerado pelo Hibernate (opcional, útil para debugging)
spring.jpa.show-sql=true

# Formatar SQL gerado pelo Hibernate (opcional, útil para debugging)
spring.jpa.properties.hibernate.format_sql=true

# Atualizar o esquema do banco de dados automaticamente (opcional)
# As opções são: validate | update | create | create-drop
spring.jpa.hibernate.ddl-auto=update

creditcard.api=${CREDIT_CARD_API}


openapi.service.title=PAYMENT-API doc
openapi.service.version=1.0.0
openapi.service.url=http://localhost:8080

springdoc.api-docs.path=/payment-api/v3/api-docs
springdoc.swagger-ui.path=/payment-api/swagger-ui.html